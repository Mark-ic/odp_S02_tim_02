Primeri:

auth/

  Register:
  POST localhost:4000/api/v1/auth/register

  {
    "username":"marko",
    "phone":"0612345678",
    "role":"user",
    "password":"aca123"
  }

  Statusi:
  200 - sve je ok
  400 - problemi sa predatim parametrima, ima u message poruke sta je tacno u pitanju!
  409 - nalog sa tim username vec postoji
  500 - greska do servera

  Login: 
  POST localhost:4000/api/v1/auth/login

  {
    "username":"marko",
    "password":"aca123"
  }

  Statusi:
  200 - sve je ok
  401 - nalog postoji ali je losa sifra
  404 - ne postoji korisnik sa zadatim username
  418 - nepoznata greska
  500 - greska do servera

mealIng/

  Add Meal: 
  POST localhost:4000/api/v1/mealIng/createMeal

  Obavezno pre slanja proveriti da li zadati sastojci postoje u bazi!
  {
    "mealName":"Djuvec",
    "price":55,
    "image":"images/Djuvec.png",
    "prepTime":15,
    "ingredients":["Cloves","Kale", "Leek"]
  }


  Statusi:
  200 - sve je ok
  400 - Neko od unetih polja nije dobro
  401 - Ne postoji token ili nije validan
  403 - Samo admini imaju pristup ovoj komandi
  500 - greska do servera

  Dobijanje sastojaka jela: 
  
  POST localhost:4000/api/v1/mealIng/getMealIng
  {
    "mealName":"Lasagna"
  }
  200 - sve je ok
  500 - greska do servera ( ne bi trebalo uopste jer ce uvek ako nema nista vracati prazno)

 

  Dodavanje sastojka u odredjeno jelo
  POST localhost:4000/api/v1/mealIng/addIngredientToMeal

  {
    "mealName":"Spaghetti Bolognese",
    "ingredientName":"Peanuts"
  }
  
  200 - sve je ok
  500 - greska do servera ( ne bi trebalo uopste jer ce uvek ako nema nista vracati prazno)

  Brisanje sastojka iz baze
  localhost:4000/api/v1/mealIng/removeIngredient

  {
    "ingredientName":"Macaroni"
  }

  200 - sve je ok
  500 - greska do servera ( ne bi trebalo uopste jer ce uvek ako nema nista vracati prazno)


  Brisanje sastojka iz Jela
  localhost:4000/api/v1/mealIng/removeIngredientsFromMeal

  {
    "mealName":"Chicken Wrap",
    "ingredientName":"Chicken thigh"
  }
  200 - sve je ok
  500 - greska do servera ( ne bi trebalo uopste jer ce uvek ako nema nista vracati prazno)

/ingredients
  dodavanje sastojka
  POST localhost:4000/api/v1/ingredients/createIngredient
  {
    "ingredientName":"Bananas", 
    "category":"Fruits", 
    "alergen":false
  }
  200 - sve je ok
  400 - Neko od unetih polja nije dobro
  401 - Ne postoji token ili nije validan
  403 - Samo admini imaju pristup ovoj komandi
  500 - greska do servera

  dobijanje grupe sastojaka
  POST localhost:4000/api/v1/ingredients/getAllIngredientsFromGroup
  { 
    "category":"Fruits"
  }
  200 - sve je ok
  401 - Ne postoji token ili nije validan
  500 - greska do servera

  Dobijanje svih kategorija
  POST localhost:4000/api/v1/ingredients/getAllIngredientGroups

  Nema Bodi
  200 - sve je ok
  401 - Ne postoji token ili nije validan
  500 - greska do servera

  Dobijanje svih sastojaka
  POST localhost:4000/api/v1/ingredients/getAllIngredients
  NEMA BODY
  200 - sve je ok
  401 - Ne postoji token ili nije validan
  500 - greska do servera

meals/
  Dobijanje svih jela
  POST localhost:4000/api/v1/meals/getAllMeals
  NEMA BODY
  
  200 - sve je ok
  401 - Ne postoji token ili nije validan
  500 - greska do servera

  Menjanje polja jela
  POST localhost:4000/api/v1/meals/updateMeal
   {
   "mealName":"Djuvec",
   "price":65,
   "image":"images/DjuVEc.png",
   "prepTime":15
  }
  200 - sve je ok
  400 - Neko od unetih polja nije dobro
  401 - Ne postoji token ili nije validan
  403 - Samo admini imaju pristup ovoj komandi
  500 - greska do servera

  Brisanje jela:
  Prvo treba da se obrise jelo iz menija, pa onda sastojci iz tog jela, pa porudzbine, pa tek onda jelo pa onda ovo da bi radilo ispravno!
       
       Izvrsiti sledece komande
       localhost:4000/api/v1/orders/deleteOrdersWithMeal
       localhost:4000/api/v1/mealIng/removeIngredientsFromMeal
       localhost:4000/api/v1/menuMeal/removeMealFromMenus

  Pa tek onda ovo
  POST localhost:4000/api/v1/meals/removeMeal
  
  {
    "mealName":"Lasagna"
  }
  
  200 - sve je ok
  500 - greska do servera ( ne bi trebalo uopste jer ce uvek ako nema nista vracati prazno)

users/
  Menjanje podataka o korisniku (username se ne menja!);
  POST localhost:4000/api/v1/users/changeUser
  {
  "username":"marko",
  "phone":"+3161234567",
  "role":"admin",
  "password":"Prikolica"
  }
  200 - sve je ok
  400 - Neko od unetih polja nije dobro
  401 - Ne postoji token ili nije validan
  403 - Samo admini imaju pristup ovoj komandi
  500 - greska do servera

  Dobijanje podataka o svim userima
  localhost:4000/api/v1/users/getAllUsers
  NEMA BODY

  Brisanje korisnika (usera)
  PRVO DA SE URADI OVO
  localhost:4000/api/v1/orders/deleteOrdersFromUser
  PA ONDA OVO
  POST localhost:4000/api/v1/users/deleteUser
  {
    "username":"marko"
  }
  200 - sve je ok
  401 - Ne postoji token ili nije validan
  403 - Samo admini imaju pristup ovoj komandi
  500 - greska do servera
/menu
  postavljanje menija na dnevni (Uvek moze biti samo 1 dnevni),
  ako je postojao dnevni pre toga, bice iskljucen, nema potrebe za removeDailyMenu
  POST localhost:4000/api/v1/menu/setDailyMenu
    {
    "menuName":"Sunday"
   }
  
  skanjanje menija da ne bude dnevni dnevni (Uvek moze biti samo 1 dnevni)
  POST localhost:4000/api/v1/menu/removeDailyMenu
   {
    "menuName":"Sunday"
   }
   error-e necu da ponvaljam vise, istu su svugde nadalje

  Koji je daily Menu?
  POST localhost:4000/api/v1/menu/getDailyMenu
  Nema zaglavlja!
  Vraca Menu

  Menjanje imena Meniju 
  POST localhost:4000/api/v1/menu/updateMenuName
  {
    "oldMenuName":"Vaskrsnji",
    "newMenuName":"Easter"
  }

  Kreiranje menija
  POST localhost:4000/api/v1/menu/create
  {
    "menuName":"MeatBased",
    "dailyMenu":true
  }

  Dobijanje svih menija
  POST localhost:4000/api/v1/menu/getAllMenus
  NEMA BODY

  Brisanje menija
  localhost:4000/api/v1/menu/deleteMenu
  {
    "menuName":"Monday"
  }

menuMeal/
  Dobijanje svih jela iz odredjenog menija
  POST localhost:4000/api/v1/menuMeal/getAllMealsFromMenu
  {
    "menuName":"Sunday"
  }

  Dodavanje jela u meni: PAZI MOZE MAKSIMALNO 20 JELA DA BUDE U MENIJU
  POST localhost:4000/api/v1/menuMeal/addMealToMenu
  {
    "mealName":"Fish Tacos",
    "menuName":"Vegan"
  }

  Brisanje jela iz menija
  POST localhost:4000/api/v1/menuMeal/removeMealFromMenu
  {
    "mealName":"Mushroom Risotto",
    "menuName":"Vegan"
  }

  Brisanje jela iz SVIH MENIJA (Ovo uraditi obavezno pre brisanja JELA!)
  POST localhost:4000/api/v1/menuMeal/removeMealFromMenus

  Dobijanje Preporuke dana (3 najprodavanija jela)
  POST localhost:4000/api/v1/menuMeal/getBestSellingMeals
  {
    "menuName":"Vegan"
  }

  Brisanje svih jela iz jednog menija
  localhost:4000/api/v1/menuMeal/removeMealsFromMenu
  {
    "menuName":"Monday"
  }

orders/
  Kreiranje porudzbine 
  POST localhost:4000/api/v1/orders/create
    {
    "timeLeft":45,
    "status":"PREPARING",
    "deliveryType":"PICKUP",
    "adress":"Cara lazara", 
    "idJelo":11,
    "idKorisnik":4
  }

  Dobijanje porudzbine po iD
  POST localhost:4000/api/v1/orders/getOrderById
  {
    "orderId":1
  }

  Dobijanje porudzbina od korisnika
  POST localhost:4000/api/v1/orders/getOrdersFromUser
  {
    "username":"administrator"
  }

  Dobijanje svih porudzbina
  POST localhost:4000/api/v1/orders/getAllOrders
  NEMA BODY

  Azuriranje porudzbine
  POST localhost:4000/api/v1/orders/updateOrder

   {
    "orderId":2,
    "timeLeft":65,
    "status":"PREPARING",
    "deliveryType":"PICKUP",
    "adress":"Cara lazara 24", 
    "idJelo":12,
    "idKorisnik":4
  }
  Azuriranje statusa porudzbine
  POST localhost:4000/api/v1/orders/updateOrderStatus
  {
    "orderId":2,
    "status":"DONE"
  }

  Brisanje porudzbine
  POST localhost:4000/api/v1/orders/deleteOrder
  {
    "orderId":12
  }

  Brisanje Porudzbina sa odredjenim Jelom
  POST localhost:4000/api/v1/orders/deleteOrdersWithMeal

  {
    "mealName":"Seafood Paella"
  }
  
  Brisanje svih porudzbina korisnika
  POST localhost:4000/api/v1/orders/deleteOrdersFromUser
  {
    "username":"Nikolica"
  }

  Dobijanje info o Korisniku
  POST localhost:4000/api/v1/orders/getOrderUser
  {
    "orderId":3
  }

  Dobijanje info o Jelu
  POST localhost:4000/api/v1/orders/getOrderMeal
  {
    "orderId":3
  }

